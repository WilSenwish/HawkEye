<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">

    <!-- 定义日志输出级别 -->
    <springProperty scope="context" name="logback.level" source="logback.level" />
    <!-- 定义日志文件的存储位置 -->
    <springProperty scope="context" name="logback.path" source="logback.path" />
    <!-- 定义日志文件的名称前缀 -->
    <springProperty scope="context" name="logback.file" source="spring.application.name" />

    <!-- 彩色日志开始 -->
    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />
    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN"
              value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr([%32.32t]){faint} %clr(%-64.64logger{63}){cyan} %clr(-){faint} %clr(%4line) %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}" />
    <!-- 彩色日志结束 -->

    <!-- Console 日志 appender -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 日志输出编码格式化 -->
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- INFO 日志 appender -->
    <appender name="INFO_LOG_FILE"  class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 如果只是想要 Info 级别的日志，只是过滤 info 还是会输出 Error 日志，因为 Error 的级别高，
             所以我们使用下面的策略，可以避免输出 Error 的日志
        -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 过滤 Error -->
            <level>ERROR</level>
            <!-- 匹配到就禁止 -->
            <onMatch>DENY</onMatch>
            <!-- 没有匹配到就允许 -->
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <!-- 日志名称，如果没有 <File> 属性，那么只会使用 FileNamePattern 的文件路径规则；
             如果同时有 <File> 和 <FileNamePattern>，那么当天日志是 <File>，
             明天会自动把今天的日志改名为今天的日期。即，<File> 的日志都是当天的。
        -->
        <File>${logback.path}/${logback.file}-info.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 文件路径，定义了日志的切分方式把每一天的日志归档到一个文件中，以防止日志填满整个磁盘空间 -->
            <FileNamePattern>${logback.path}/${logback.file}/${logback.file}-info.%d{yyyy-MM-dd}.log</FileNamePattern>
            <!-- 日志最大的历史 10天 -->
            <maxHistory>10</maxHistory>
        </rollingPolicy>
        <!-- 日志输出编码格式化 -->
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{59} - %line : %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- ERROR 日志 appender -->
    <appender name="ERROR_LOG_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <!-- 日志名称，如果没有 <File> 属性，那么只会使用 FileNamePattern 的文件路径规则；
             如果同时有 <File> 和 <FileNamePattern>，那么当天日志是 <File>，
             明天会自动把今天的日志改名为今天的日期。即，<File> 的日志都是当天的。
        -->
        <File>${logback.path}/${logback.file}-error.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 文件路径，定义了日志的切分方式把每一天的日志归档到一个文件中，以防止日志填满整个磁盘空间 -->
            <FileNamePattern>${logback.path}/${logback.file}/${logback.file}-error.%d{yyyy-MM-dd}.log</FileNamePattern>
            <!-- 日志最大的历史 15天 -->
            <maxHistory>15</maxHistory>
        </rollingPolicy>
        <!-- 日志输出编码格式化 -->
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{59} - %line : %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 指定最基础的日志输出级别 -->
    <root level="INFO">
        <appender-ref ref="CONSOLE" />
        <appender-ref ref="INFO_LOG_FILE" />
        <appender-ref ref="ERROR_LOG_FILE" />
    </root>

</configuration>
